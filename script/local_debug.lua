return {
	CONSOLE = {
		docked = true,
		history = {
			"for k, v in pairs( location:GetPortals() ) do print( k, v ) end",
			"for k, v in location:Portals() do print( k, v ) end",
			"for k, v in location:Portals() do print( k, v, v.location ) end",
			"print(t:GetCoordinate())",
			"print( t:GetAspect( Aspect.Combat ))",
			"print( t:GetAspect( Aspect.Combat ):EvaluateTarget( player ))",
			"print( player:GetAspect( Aspect.Combat ))",
			"print(t)",
			"print(t:IsEnemy( player ))",
			"print(player.combat)",
			"print(player.faction)",
			"print(t.faction)",
			"print(t:GetBounds())",
			"for i, v in ipairs( t.rooms ) do print( i, v:GetCoordinate() ) end",
			"print(location:GetCoordinate())",
			"print(t:GetBounds())",
			"puppet:CollectPotentialVerbs()",
			"puppet:CollectPotentialVerbs( \"tile\" )",
			"puppet:RegenVerbs( \"tile\" ); puppet:CollectPotentialVerbs( \"tile\" )",
			"puppet:RegenVerbs(\"room\" ); DBG(puppet)",
			"print(tostr(puppet:GetPotentialVerbs(\"room\" ))",
			")",
			"print(tostr(puppet:GetPotentialVerbs(\"room\" )))",
			"print(tostr(puppet:GetPotentialVerbs(\"room\" ),2))",
			"puppet:SetFocus(t)",
			"puppet:CollectPotentialVerbs(\"room\")",
			"print(screen.puppet)",
			"print(location)",
			"print(tostr(location.exits))",
			"print(tostr(location.portals))",
			"print(t:GetTarget())",
			"print(screen.current_verb)"
		}
	},
	DEBUG_FILE = "debug.lua"
}