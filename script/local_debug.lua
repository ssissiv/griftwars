return {
	CONSOLE = {
		docked = true,
		history = {
			"print(world:CalculateTimeElapsed(1.0))",
			"print( math.modf(2.3, 551.0))",
			"print(world:CalculateTimeElapsed(1.0))",
			"print(world.debug_world_speed)",
			"print(world:CalculateTimeElapsed(1.0))",
			"print( Verb.Attack )",
			"t:EvaluateTargets()",
			"sdf",
			"print(t:IsDoing())",
			"print( t )",
			"print( t:CanDo( puppet ))",
			"print(t:CollectVerbs( nil, puppet, nil )",
			")",
			"print(t:CollectVerbs( nil, puppet, nil ))",
			"puppet:RegenVerbs()",
			"puppet:GainAspect( Skill.Scrounge() )",
			"print(t:GetLocation())",
			"puppet:RegenVerbs()",
			"world:SetPuppet( nil )",
			"print(os.clock())",
			"print(os.time())",
			"print( love.timer.getTime())",
			"print(t:GetAspect( Job ))",
			"print(tostr(COROS))",
			"print(tostr(COROS[1]))",
			"print( coroutine.status(COROS[1]))",
			"print(player.focus)",
			"for i, l in pairs( world.locations ) do print( l ) end",
			"for i, l in pairs( world.locations ) assert( l.world ) end",
			"for i, l in pairs( world.locations ) do assert( l.world ) end",
			"print(t.world)",
			"print(t:IsSpawned())"
		}
	},
	DEBUG_FILE = "debug.lua"
}