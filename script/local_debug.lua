return {
	CONSOLE = {
		docked = true,
		history = {
			"print(t.owner:GetStat(STAT.FATIGUE):GetPercent())",
			"print( Easing.outQuad( 0.16, 0, PRIORITY_EMERGENCY, 1.0 ))",
			"print( Easing.outQuad( 0.16, 0, PRIORITY.EMERGENCY, 1.0 ))",
			"print( Easing.outQuad( 0.16, 0, PRIORITY.EMERGENCY, 1.0 ) + PRIORITY.FUN )",
			"for i = 0, 1, 0.1 do print( easing.outQuad( t, 0, 1.0, 1.0 )) end",
			"for i = 0, 1, 0.1 do print( i, easing.outQuad( i, 0, 1.0, 1.0 )) end",
			"for i = 0, 1, 0.1 do print( i, Easing.outQuad( i, 0, 1.0, 1.0 )) end",
			"print( Easing.inQuad( 0.8, 0, 75, 1.0 ))",
			"print(t:GetStat( STAT.FATIGUE ):GetPercent())",
			"print(t:GetStat( STAT.FATIGUE ):GetValue())",
			"print(t)",
			"verb = t",
			"print(verb:CanInteract(t))",
			"print(t:IsBusy())",
			"print(t:IsBusy(VERB_FLAGS.MOVEMENT))",
			"agent = t",
			"print(t:CanInteract(agent))",
			"print(tostr(world.pause))",
			"print(puppet)",
			"print(player)",
			"print(world:GetPuppet())",
			"print(world:GetPuppet():IsBusy( VERB_FLAGS.MOVEMENT ))",
			"print(t)",
			"kevin = t",
			"print(kevin:IsAcquainted(t))",
			"kevin:Acquaint( t )",
			"print(kevin:IsAcquainted(t))",
			"print(kevin.memory)",
			"a = t",
			"print(a:CheckPrivacy( PRIVACY.ID, t ))",
			"print(a,t)",
			"print(a:CheckPrivacy( t, PRIVACY.ID ))"
		}
	},
	DEBUG_FILE = "debug.lua"
}