return {
	CONSOLE = {
		docked = true,
		history = {
			"puppet.location:SearchObject( function( obj ) print( obj, obj.location ) end, 2 )",
			"puppet.location:SearchObject( function( obj ) print( obj, obj.location ) end, 1 )",
			"puppet.location:SearchObject( function( obj ) print( obj, obj.location ) end, 2 )",
			"puppet.location:SearchObject( function( obj ) print( obj, obj.location ) end, 1 )",
			"puppet.location:SearchObject( function( obj ) print( obj, obj.location ) end, 2 )",
			"puppet.location:SearchObject( function( obj ) print( obj, obj.location ) end, 3 )",
			"print(t:GetAspect( Aspect.Combat ))",
			"print(t:GetAspect( Aspect.Combat ):EvaluateTarget( player ))",
			"print(t:GetAspect( Aspect.Combat ))",
			"print(puppet.location:IsListener( t:GetAspect( Aspect.Combat )))",
			"print(puppet.location.events:IsListener( t:GetAspect( Aspect.Combat )))",
			"puppet.location:Flood( function( x, depth ) print( x, depth ) return depth < 3 end )",
			"puppet.location:Flood( function( x, depth ) print( x, depth ) return depth < 3, depth == 3 end )",
			"puppet.location:Flood( function( x, depth ) if x:HasAspect( Feature.Tavern ) then print( x, depth ) end return depth <= 3 end )",
			"puppet.location:Flood( function( x, depth ) if x:HasAspect( Feature.Tavern ) then print( x, depth ) end return depth <= 5 end )",
			"puppet.location:Flood( function( x, depth ) if x:HasAspect( Feature.Tavern ) then print( x, depth ) end return depth <= 7 end )",
			"puppet.location:Flood( function( x, depth ) if x:HasAspect( Feature.Tavern ) then print( x, depth ) end return depth <= 8 end )",
			"puppet.location:Flood( function( x, depth ) if x:HasAspect( Feature.Tavern ) then print( x, depth ) return false end return depth <= 8 end )",
			"sdf",
			"puppet.location:Flood( function( x, depth ) if x:HasAspect( Feature.Tavern ) then print( x, depth ) return false end return depth <= 8 end )",
			"puppet.location:Flood( function( x, depth ) if x:HasAspect( Feature.Tavern ) then print( x, depth ) return false, false end return depth <= 8 end )",
			"sdf",
			"puppet.location:Flood( function( x, depth ) if x:HasAspect( Feature.Tavern ) then print( x, depth ) return false, false end return depth <= 8 end )",
			"puppet.location:Flood( function( x, depth ) if x:HasAspect( Feature.Tavern ) then print( x, depth ) return false, false end return depth <= 4 end )",
			"sdf",
			"puppet.location:Flood( function( x, depth ) if x:HasAspect( Feature.Tavern ) then print( x, depth ) return false, false end return depth <= 4 end )",
			"puppet.location:Flood( function( x, depth ) if x:HasAspect( Feature.Tavern ) then print( x, depth ) return false, false end return depth <= 6 end )",
			"puppet.location:Flood( function( x, depth ) if x:HasAspect( Feature.Tavern ) then print( x, depth ) return false, false end return depth <= 7 end )",
			"puppet.location:Flood( function( x, depth ) if x:HasAspect( Feature.Tavern ) then print( x, depth ) return false, false end return depth <= 7 end ); print(\"DONE\")",
			"puppet.location:Flood( function( x, depth ) if x:HasAspect( Feature.Tavern ) then print( x, depth ) return false, false end return depth <= 7 end ); print(\"DONE\", os.clock())",
			"puppet.location:Flood( function( x, depth ) if x:HasAspect( Feature.Tavern ) then print( x, depth ) return false, false end return depth <= 9 end ); print(\"DONE\", os.clock())",
			"puppet.location:Flood( function( x, depth ) if x:HasAspect( Feature.Tavern ) then print( x, depth ) return false, false end return depth <= 11 end ); print(\"DONE\", os.clock())"
		}
	},
	DEBUG_FILE = "debug.lua"
}