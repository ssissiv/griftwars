return {
	CONSOLE = {
		docked = true,
		history = {
			"print(world:GetDateTime() - t.when )",
			"print( Calendar.GetNormalizedTimeOfDay( 0 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 0 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 7 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 19 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 22 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 24 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 4 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 7 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 7.01 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 10 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 7 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 8 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 7 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 6 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 9 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 3 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 11 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 18 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 19 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 20 ))",
			"print( Calendar.GetNormalizedTimeOfDay( now, 22 ))",
			"print(t:CanInteract())",
			"sdf",
			"print(t:HasAspect( Aspect.Behaviour ))",
			"print( Aspect.Behaviour )",
			"print( is_class( Behaviour.ManageFatigue ))",
			"print( is_class( Behaviour.ManageFatigue, Aspect.Behaviour ))",
			"print(t)",
			"print(t:IsBusy())",
			"print(t:IsBusy( VERB_FLAGS.HANDS ))",
			"s = Verb.Scrounge(); print( s:CanInteract( t ))"
		}
	},
	DEBUG_FILE = "debug.lua"
}