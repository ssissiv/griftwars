return {
	CONSOLE = {
		docked = true,
		history = {
			"print(os.time())",
			"print( love.timer.getTime())",
			"print(t:GetAspect( Job ))",
			"print(tostr(COROS))",
			"print(tostr(COROS[1]))",
			"print( coroutine.status(COROS[1]))",
			"print(player.focus)",
			"for i, l in pairs( world.locations ) do print( l ) end",
			"for i, l in pairs( world.locations ) assert( l.world ) end",
			"for i, l in pairs( world.locations ) do assert( l.world ) end",
			"print(t.world)",
			"print(t:IsSpawned())",
			"print(location)",
			"puppet.location:AddEntity( Object.JunkPile() )",
			"puppet.location:AddEntity( Object.JunkHeap() )",
			"Object.JunkHeap():WarpToLocation( puppet.location )",
			"location:BroadcastEvent( LOCATION_EVENT.ENTITY_EVENT, \"what' )",
			"location:BroadcastEvent( LOCATION_EVENT.ENTITY_EVENT, \"what\" )",
			"puppet.location:BroadcastEvent( LOCATION_EVENT.ENTITY_EVENT, \"what\" )",
			"puppet.location:BroadcastEvent( \"ENTITY_EVENT\", \"what\" )",
			"location:BroadcastEvent( LOCATION_EVENT.ENTITY_EVENT, \"what\" )",
			"puppet.location:BroadcastEvent( \"ENTITY_EVENT\", \"what\" )",
			"Object.JunkHeap():WarpToLocation( puppet.location )",
			"t:DeltaTrust(10)",
			"Object.JunkHeap():WarpToLocation( puppet.location )",
			"puppet.location:SearchObject( function( obj ) print( obj, obj.location ) end, 1 )",
			"puppet.location:SearchObject( function( obj ) print( obj, obj.location ) end, 2 )",
			"puppet.location:SearchObject( function( obj ) print( obj, obj.location ) end, 1 )",
			"puppet.location:SearchObject( function( obj ) print( obj, obj.location ) end, 2 )",
			"puppet.location:SearchObject( function( obj ) print( obj, obj.location ) end, 1 )",
			"puppet.location:SearchObject( function( obj ) print( obj, obj.location ) end, 2 )",
			"puppet.location:SearchObject( function( obj ) print( obj, obj.location ) end, 3 )"
		}
	},
	DEBUG_FILE = "debug.lua"
}