return {
	CONSOLE = {
		docked = true,
		history = {
			"print( screen.camera:WorldToScreen( 0, 0 ))",
			"print( screen.camera:WorldToScreen( 1, 0 ))",
			"print( screen.camera:WorldToScreen( 1, 1 ))",
			"print( screen.camera:WorldToScreen( 1, 2 ))",
			"print( screen.camera:WorldToScreen( 1, 12 ))",
			"print( screen.camera:WorldToScreen( player:GetCoordinate() ))",
			"print(screen.camera.view_height)",
			"print(screen.camera.view_height/2)",
			"print(screen.camera.view_width)",
			"print(location)",
			"print(t:FindExit( EXIT.SOUTH ))",
			"print(t:IsPassable(player))",
			"print(location)",
			"print(location:FindPassableTile( t.x, t.y, player ))",
			"print(t)",
			"print(location)",
			"print(map)",
			"for i, k in map:Neighbours(t) do print( i, k ) end",
			"print( t )",
			"for i, k in map:Neighbours(t) do print( i, k ) end",
			"for k, v in pairs( location:GetPortals() ) do print( k, v ) end",
			"for k, v in location:Portals() do print( k, v ) end",
			"for k, v in location:Portals() do print( k, v, v.location ) end",
			"print(t:GetCoordinate())",
			"print( t:GetAspect( Aspect.Combat ))",
			"print( t:GetAspect( Aspect.Combat ):EvaluateTarget( player ))",
			"print( player:GetAspect( Aspect.Combat ))",
			"print(t)",
			"print(t:IsEnemy( player ))",
			"print(player.combat)",
			"print(player.faction)",
			"print(t.faction)"
		}
	},
	DEBUG_FILE = "debug.lua"
}