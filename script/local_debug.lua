return {
	CONSOLE = {
		docked = true,
		history = {
			"print(string.byte(\"a\"))",
			"print(string.byte(\"asdf\"))",
			"t = { 1, 2, 3, 4, 5 }; print(table.unpack(t, 3, 4 )",
			")",
			"t = { 1, 2, 3, 4, 5 }; print(table.unpack(t, 3, 4 ))",
			"print(t)",
			"print(t, is_instance( t, Interaction ))",
			"print( t:CheckPrivacy( player, PRIVACY.ID ))",
			"t:GenerateLocTable( player )",
			"print(player)",
			"print( loc.format( \"{1.Id}\", t:LocTable( player ))",
			"print( loc.format( \"{1.Id}\", t:LocTable( player )))",
			"DBG(t)",
			"asp = t",
			"print(asp)",
			"agent = t",
			"print(t:IsSatisfiable(agent))",
			"print(asp)",
			"print(t:IsSatisfiable(agent))",
			"print(t:GetCooldown())",
			"print(string.char(95))",
			"print(string.char(96))",
			"print(string.char(97))",
			"print(han)",
			"print(player)",
			"print(t)",
			"p = PathFinder( player, t ); print( tostr(p:GetPath()))",
			"sdf",
			"p = PathFinder( player, t ); print( tostr(p:GetPath()))",
			"print(player:GetLocation())",
			"print(t:GetLocation())",
			"p = PathFinder( player, t ); print( tostr(p:GetPath()))"
		}
	},
	DEBUG_FILE = "debug.lua"
}